{"version":3,"sources":["components/Loading.js","services/index.js","hooks/usePokemon.js","components/PokemonGallery.js","components/PokemonCard.js","components/PokemonSearch.js","components/PokeDex.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","API_URL","getPokemons","limit","page","a","fetch","response","json","data","console","log","getPokemonData","url","fetchPokemons","promises","results","map","pokemon","Promise","all","getPokemonTypes","usePokemon","useState","filter","setFilter","allPokemon","setAllPokemon","types","setTypes","selected","setSelected","loading","setLoading","setPage","useMemo","lcFilter","toLowerCase","item","name","includes","useEffect","then","prevPokemon","concat","pokemonBytype","i","type","PokemonGallery","sprites","current","setCurrent","Object","values","sprite","slice","Array","isArray","length","index","onClick","moveDot","src","alt","PokemonCard","id","abilities","front_default","ability","PokemonSearch","onSubmit","onSetType","onSetFilter","placeholder","value","onChange","PokeDex","useCallback","evt","target","handleNextPage","prevPage","observer","useRef","lastPokemonRef","node","disconnect","IntersectionObserver","entries","isIntersecting","rootMargin","threshold","observe","preventDefault","p","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34606695.chunk.js","sourcesContent":["import '../styles/loading.scss';\n\n const Loading = () => {\n    return (\n        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    )\n\n}\n\nexport default Loading;","const API_URL = 'https://pokeapi.co/api/v2/pokemon/'\n\nexport const getPokemons = async (limit, page) => {\n  try {\n    const response = await fetch(\n      `${API_URL}?limit=${limit}&offset=${limit * page}`\n    )\n    const data = await response.json()\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getPokemonData = async (url) => {\n  try {\n    const response = await fetch(url)\n    const data = await response.json()\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchPokemons = async (limit, page) => {\n  try {\n    const data = await getPokemons(limit, page)\n    const promises = data.results.map(async (pokemon) => {\n      return await getPokemonData(pokemon.url)\n    })\n    const results = await Promise.all(promises)\n    return results\n  } catch (error) {}\n}\n\nexport const searchPokemon = async (name) => {\n  try {\n    const response = await fetch(`${API_URL}${name}`)\n    const data = await response.json()\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getPokemonTypes = async () => {\n  try {\n    const response = await fetch('https://pokeapi.co/api/v2/type')\n    const data = await response.json()\n    return data.results\n  } catch (error) {\n    console.log(error)\n  }\n}\n","import { useState, useEffect, useMemo } from 'react'\nimport { getPokemonTypes, fetchPokemons } from '../services/'\n\nconst INITIAL_PAGE = 0\nconst usePokemon = () => {\n  const [filter, setFilter] = useState('')\n  const [allPokemon, setAllPokemon] = useState([])\n  const [types, setTypes] = useState([])\n  const [selected, setSelected] = useState('normal')\n  const [loading, setLoading] = useState(false)\n  const [page, setPage] = useState(INITIAL_PAGE)\n\n  const pokemon = useMemo(() => {\n    const lcFilter = filter.toLowerCase()\n    return allPokemon.filter((item) =>\n      item.name.includes(lcFilter)\n    )\n  }, [filter, allPokemon])\n\n  useEffect(() => {\n    setLoading(true)\n    fetchPokemons(10, page).then((data) => {\n      setAllPokemon((prevPokemon) => prevPokemon.concat(data))\n    })\n    setLoading(false)\n  }, [page, setLoading])\n\n  useEffect(() => {\n    setLoading(true)\n    if (selected !== 'normal') {\n      fetchPokemons(10, 0).then((data) => {\n        const pokemonBytype = data.filter((pokemon) =>\n          pokemon.types.map((i) => i.type.name).includes(selected)\n        )\n        setAllPokemon(pokemonBytype)\n      })\n    } \n    setLoading(false)\n  }, [selected])\n\n  useEffect(() => {\n    getPokemonTypes().then((data) => {\n      setTypes(data)\n    })\n  }, [types])\n\n  return {\n    pokemon,\n    filter,\n    setFilter,\n    setAllPokemon,\n    types,\n    setTypes,\n    selected,\n    setSelected,\n    loading,\n    setPage,\n    page,\n  }\n}\n\nexport default usePokemon\n","import { useState } from 'react'\nimport '../styles/slide.scss'\n\nconst PokemonGallery = (sprites) => {\n  const [current, setCurrent] = useState(0)\n\n  // convert object sprite to array and delete unused parts\n  const data = Object.values(sprites)\n    .filter((sprite) => sprite !== null)\n    .slice(0, -2)\n\n  if (!Array.isArray(data) || data.length <= 0) return null\n\n  const moveDot = (index) => {\n    if (index === current) {\n      setCurrent(current === data.length - 1 ? 0 : current + 1)\n    } else {\n      setCurrent(current === 0 ? data.length - 1 : current - 1)\n    }\n    setCurrent(index)\n  }\n\n  return (\n    <section className=\"slider\">\n      <div className=\"container-dots\">\n        {data.map((item, index) => (\n          <div\n            className={current === index ? 'dot active' : 'dot'}\n            key={index}\n            onClick={() => {\n              moveDot(index)\n            }}\n          />\n        ))}\n      </div>\n      {data.map((item, index) => (\n        <div\n          className={index === current ? 'slide active' : 'slide'}\n          key={index}\n        >\n          {index === current && (\n            <img src={item} alt={item.name} className=\"image\" />\n          )}\n        </div>\n      ))}\n    </section>\n  )\n}\n\nexport default PokemonGallery\n","import PokemonGallery from './PokemonGallery'\nimport { FaCheckCircle } from 'react-icons/fa'\nimport '../styles/index.scss'\nimport '../styles/pokemonDescription.scss'\n\n\nconst PokemonCard = ({\n  name,\n  id,\n  sprites,\n  abilities,\n  types,\n}) => {\n  return (\n    <div className=\"pokemon-card\">\n      <div className=\"pokemon-card-data\">\n        <div className=\"pokemon-card-image\">\n          <img src={sprites.front_default} alt={name} />\n        </div>\n        <div className=\"pokemon-card-text\">\n          <span>{name}</span>\n          <span># {id}</span>\n        </div>\n      </div>\n\n      {/* Gallery */}\n      <div className=\"pokemon-gallery-container\">\n        <PokemonGallery {...sprites} />\n      </div>\n\n      {/* Description */}\n      <div className=\"pokemon-card-details-info\">\n        <div className=\"pokemon-card-details-info-container\">\n          <div className=\"pokemon-card-details\">\n            <div className=\"pokemon-card-details-info\">\n              <span>Abilities :</span>\n              {abilities.map((item) => (\n                <div key={item.ability.name}>\n                  <FaCheckCircle className=\"icons\" /> {item.ability.name}\n                </div>\n              ))}\n              <span>Type(s):</span>\n              {types.map((item) => (\n                <div key={item.type.name}>\n                  <FaCheckCircle className=\"icons\" /> {item.type.name}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard\n","import usePokemon from '../hooks/usePokemon'\n\nconst PokemonSearch = ({\n  onSubmit,\n  onSetType,\n  onSetFilter,\n  filter,\n  selected,\n}) => {\n  const { types } = usePokemon()\n\n  return (\n    <div className=\"pokemon-search-container\">\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search pokemon\"\n          value={filter}\n          onChange={onSetFilter}\n        />\n\n        <select value={selected} onChange={onSetType}>\n          {types.map((type, i) => (\n            <option key={i} value={type.name}>\n              {type.name}\n            </option>\n          ))}\n        </select>\n      </form>\n    </div>\n  )\n}\n\nexport default PokemonSearch\n","import { useCallback, useRef } from 'react'\nimport usePokemon from '../hooks/usePokemon'\nimport PokemonCard from './PokemonCard'\nimport PokemonSearch from './PokemonSearch'\nimport '../styles/index.scss'\n\nconst PokeDex = () => {\n  const {\n    loading,\n    selected,\n    filter,\n    setFilter,\n    setSelected,\n    types,\n    setPage,\n    pokemon,\n  } = usePokemon()\n\n  const onSetFilter = useCallback(\n    (evt) => setFilter(evt.target.value),\n    [setFilter]\n  )\n\n  const onSetType = useCallback(\n    (evt) => setSelected(evt.target.value),\n    [setSelected]\n  )\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n  }\n\n  const handleNextPage = useCallback(() => {\n    setPage((prevPage) => prevPage + 1)\n  }, [setPage])\n\n  const observer = useRef()\n\n  const lastPokemonRef = useCallback(\n    (node) => {\n      let options = {\n        rootMargin: '150px',\n        threshold: 1.0,\n      }\n      if (loading) return\n      if (observer.current) observer.current.disconnect()\n\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting === true) {\n          handleNextPage()\n        }\n      }, options)\n      if (node) observer.current.observe(node)\n    },\n    [handleNextPage, loading]\n  )\n\n  return (\n    <>\n      <PokemonSearch\n        onSubmit={handleSubmit}\n        onSetFilter={onSetFilter}\n        onSetType={onSetType}\n        filter={filter}\n        types={types}\n        selected={selected}\n      />\n      <div className=\"pokemons\">\n        {pokemon.map((p, index) => (\n          <div key={index} ref={lastPokemonRef}>\n            <PokemonCard {...p} />\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default PokeDex\n","import Loading from './components/Loading'\nimport PokeDex from './components/PokeDex'\nimport usePokemon from './hooks/usePokemon'\n\nconst App = () => {\n  const { loading } = usePokemon()\n\n  return <div>{loading ? <Loading /> : <PokeDex />}</div>\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}